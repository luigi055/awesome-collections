name: publish package
run-name: bump up package version by ${{ github.actor }}
on:
  workflow_dispatch:
    inputs:
      release_type:
        type: choice
        required: true
        description: 'Release type (one of)'
        options:
          - prepatch
          - preminor
          - premajor
          - prerelease
          - 'hotfix'
          - 'minor'
          - 'major'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          registry-url: https://registry.npmjs.org/
          node-version: '16'

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Check code style
        run: pnpm lint

      - name: Check Types
        run: pnpm types:check

      - name: Unit tests
        run: pnpm test

      - name: build package
        run: pnpm build

      - name: Git configuration
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git remote set-url origin https://${{ github.actor }}:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository }}

      - name: bump release version and use tag latest
        run: |
          pnpm lerna version ${{ github.event.inputs.release_type }} --conventional-commits --no-private

      - name: Publish package
        run: pnpm lerna publish from-package --no-verify-access --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMJS_ACCESS_TOKEN }}
